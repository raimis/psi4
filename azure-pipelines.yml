# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'vs2015-win2012r2'

trigger:
  - master

steps:

  # Install Chocolatey (https://chocolatey.org/install#install-with-powershellexe)
  - powershell: |
      Set-ExecutionPolicy Bypass -Scope Process -Force
      iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      Write-Host "##vso[task.setvariable variable=PATH]$env:PATH"
      choco --version
    displayName: "Install Chocolatey"
  
  # Install Miniconda
  - powershell: |
      choco install miniconda3 --yes
      $env:PATH = "C:\tools\miniconda3;" + $env:PATH
      $env:PATH = "C:\tools\miniconda3\Scripts;" + $env:PATH
      $env:PATH = "C:\tools\miniconda3\Library\bin;" + $env:PATH
      Write-Host "##vso[task.setvariable variable=PATH]$env:PATH"
      $env:LIB = "C:\tools\miniconda3\Library\lib;" + $env:LIB
      Write-Host "##vso[task.setvariable variable=LIB]$env:LIB"
      conda --version
    displayName: "Install Miniconda"

  # Create conda enviroment
  # Note: conda activate/deactive doesn't work yet with PowerShell (https://github.com/conda/conda/issues/626)
  - powershell: |
      conda config --set always_yes yes 
      conda install --channel conda-forge `
                    cmake `
                    deepdiff `
                    intel-openmp=2018.0.3 `
                    mkl-devel=2018.0.3 `
                    mpmath `
                    networkx `
                    ninja `
                    numpy `
                    pybind11 `
                    pytest `
                    python=3.6
      conda list
    displayName: "Install conda packages"

  # Install LLVM
  # Note: LLVM distributed by conda is too old
  - powershell: |
      choco install llvm --yes
      $env:PATH = "C:\Program Files\LLVM\bin;" + $env:PATH
      Write-Host "##vso[task.setvariable variable=PATH]$env:PATH"
      dir "C:\Program Files\LLVM\bin"
      clang-cl --version
      link --version
    displayName: "Install LLVM"

  - powershell: |
      dir C:\tools\miniconda3
      python --version
      C:\tools\miniconda3\python --version

  # Configure
  - powershell: |
      dir
      mkdir build
      cd build
      clang-cl --version
      link --version
      dir "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC
      & "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64
      cmake -G Ninja `
            -DCMAKE_BUILD_TYPE=Debug `
            -DCMAKE_INSTALL_PREFIX=../install `
            -DCMAKE_C_COMPILER=clang-cl `
            -DCMAKE_CXX_COMPILER=clang-cl `
            -DCMAKE_LINKER=lld-link `
            -DENABLE_XHOST=OFF `
            -DMAX_AM_ERI=5 `
            $(Build.SourcesDirectory)
    displayName: "Configure Psi4"
    workingDirectory: $(Build.BinariesDirectory)

  # Build
  
  # Install
  
  # Test
  
  # Package
  
  # Deploy
  
  
